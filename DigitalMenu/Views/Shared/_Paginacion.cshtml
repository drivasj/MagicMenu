
@model PagedList

@if (Model != null)
{
    <nav aria-label="Resultados paginados">
        <ul class="pagination">
            @if (Model.pageInicial != 1)
            {
                if (Model.pageInicial >= 31)
                {
                    <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadFirstPagedList('@Model.controller', '@Model.action', '@Model.panelUpdate', '@Model.filter')">Inicio</a></li>
                }

                <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadPreviousPagedList('@Model.controller', '@Model.action', '@Model.panelUpdate', '@Model.filter')">Anterior</a></li>

                for (int x = Model.pageInicial; x < (Model.pageInicial + 10); x++)
                {
                    if (x > Math.Ceiling(Model.pageTotal))
                    {
                        break;
                    }
                    else
                    {

                        if (Model.page == x)
                        {
                            <li class="page-item active"><a class="page-link" style="cursor:pointer;">@x</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadPagedList('@Model.controller','@Model.action',@x,'@Model.panelUpdate','@Model.filter')">@x</a></li>
                        }
                    }

                }

                if (Math.Ceiling(Model.pageTotal) > (Model.pageInicial + 10))
                {
                    <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadNextPagedList('@Model.controller', '@Model.action', '@Model.panelUpdate', '@Model.filter')">Siguiente</a></li>

                    if (Math.Ceiling(Model.pageTotal) > (Model.pageInicial + 20))
                    {
                        <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadLastPagedList('@Model.controller', '@Model.action', '@Model.panelUpdate', '@Model.filter')">Fin</a></li>
                    }

                }

            }
            else
            {

                for (int x = Model.pageInicial; x < (Model.pageInicial + 10); x++)
                {
                    if (x > Math.Ceiling(Model.pageTotal))
                    {
                        break;
                    }
                    else
                    {

                        if (Model.page == x)
                        {
                            <li class="page-item active"><a class="page-link" style="cursor:pointer;">@x</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadPagedList('@Model.controller','@Model.action',@x,'@Model.panelUpdate','@Model.filter')">@x</a></li>
                        }
                    }

                }

                if (Math.Ceiling(Model.pageTotal) >= 10)
                {

                    <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadNextPagedList('@Model.controller','@Model.action','@Model.panelUpdate','@Model.filter')">Siguiente</a></li>
                    if (Math.Ceiling(Model.pageTotal) >= 21)
                    {
                        <li class="page-item"><a class="page-link" style="cursor:pointer;" onclick="LoadLastPagedList('@Model.controller', '@Model.action', '@Model.panelUpdate', '@Model.filter')">Fin</a></li>
                    }
                }
            }
        </ul>
    </nav>

    @Html.Hidden("PagedListPageTotal", Math.Ceiling(Model.pageTotal))
    @Html.Hidden("PagedListPageInicial", Model.pageInicial)

    <script type="text/javascript">
    $(function () {
        AddDataBackPaged(10, @Model.page, @Model.pageInicial);
    });
    </script>
}
