// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestWeb;

#nullable disable

namespace DigitalMenu.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240725162521_entitesSystem")]
    partial class entitesSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DigitalMenu.Models.Entity.Dishe", b =>
                {
                    b.Property<int>("IdDishes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("DishescategoryIdDishesCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdDishesCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdRestaurant")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.Property<int?>("RestaurantIdRestaurant")
                        .HasColumnType("int");

                    b.HasKey("IdDishes");

                    b.HasIndex("DishescategoryIdDishesCategory");

                    b.HasIndex("RestaurantIdRestaurant");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.DisheCategory", b =>
                {
                    b.Property<int>("IdDishesCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.HasKey("IdDishesCategory");

                    b.ToTable("Dishescategory");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EmployeedetailsIdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("IdEmployee");

                    b.HasIndex("EmployeedetailsIdEmployee");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.EmployeeDetails", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEmployee");

                    b.ToTable("Employeedetails");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.Restaurant", b =>
                {
                    b.Property<int>("IdRestaurant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("RestaurantdetailsIdRestaurant")
                        .HasColumnType("int");

                    b.HasKey("IdRestaurant");

                    b.HasIndex("RestaurantdetailsIdRestaurant");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.RestaurantDetails", b =>
                {
                    b.Property<int>("IdRestaurant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxId")
                        .HasColumnType("longtext");

                    b.HasKey("IdRestaurant");

                    b.ToTable("Restaurantdetails");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.RestaurantEmployee", b =>
                {
                    b.Property<int>("IdRestaurantEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("IdRestaurant")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpdateUser")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.Property<int?>("RestaurantIdRestaurant")
                        .HasColumnType("int");

                    b.HasKey("IdRestaurantEmployee");

                    b.HasIndex("RestaurantIdRestaurant");

                    b.ToTable("Restaurantemployee");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Application", b =>
                {
                    b.Property<int>("IdApplication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Display")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.HasKey("IdApplication");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("longtext");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Area")
                        .HasColumnType("longtext");

                    b.Property<string>("Controller")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("IdApplication")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.Property<int?>("applicationIdApplication")
                        .HasColumnType("int");

                    b.HasKey("IdMenu");

                    b.HasIndex("applicationIdApplication");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NameRoleNotification")
                        .HasColumnType("longtext");

                    b.Property<int>("Privilege")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("TimeFinal")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("TimeInitial")
                        .HasColumnType("time(6)");

                    b.HasKey("IdRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Rolemenu", b =>
                {
                    b.Property<long>("IdRoleMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext");

                    b.Property<int?>("menuIdMenu")
                        .HasColumnType("int");

                    b.Property<int?>("roleIdRole")
                        .HasColumnType("int");

                    b.HasKey("IdRoleMenu");

                    b.HasIndex("menuIdMenu");

                    b.HasIndex("roleIdRole");

                    b.ToTable("Rolemenu");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Roleuser", b =>
                {
                    b.Property<long>("IdRoleUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext");

                    b.Property<int?>("roleIdRole")
                        .HasColumnType("int");

                    b.Property<int?>("userIdUser")
                        .HasColumnType("int");

                    b.HasKey("IdRoleUser");

                    b.HasIndex("roleIdRole");

                    b.HasIndex("userIdUser");

                    b.ToTable("Roleuser");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("ChatIdTelegram")
                        .HasColumnType("bigint");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext");

                    b.Property<bool>("NotificationPush")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Online")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PasswordUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RegisterUser")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserTelegram")
                        .HasColumnType("longtext");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.Dishe", b =>
                {
                    b.HasOne("DigitalMenu.Models.Entity.DisheCategory", "Dishescategory")
                        .WithMany("Dishes")
                        .HasForeignKey("DishescategoryIdDishesCategory");

                    b.HasOne("DigitalMenu.Models.Entity.Restaurant", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantIdRestaurant");

                    b.Navigation("Dishescategory");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.Employee", b =>
                {
                    b.HasOne("DigitalMenu.Models.Entity.EmployeeDetails", "Employeedetails")
                        .WithMany()
                        .HasForeignKey("EmployeedetailsIdEmployee");

                    b.Navigation("Employeedetails");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.Restaurant", b =>
                {
                    b.HasOne("DigitalMenu.Models.Entity.RestaurantDetails", "Restaurantdetails")
                        .WithMany()
                        .HasForeignKey("RestaurantdetailsIdRestaurant");

                    b.Navigation("Restaurantdetails");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.RestaurantEmployee", b =>
                {
                    b.HasOne("DigitalMenu.Models.Entity.Restaurant", "Restaurant")
                        .WithMany("Restaurantemployee")
                        .HasForeignKey("RestaurantIdRestaurant");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Menu", b =>
                {
                    b.HasOne("DigitalMenu.Models.EntitySystem.Application", "application")
                        .WithMany("menu")
                        .HasForeignKey("applicationIdApplication");

                    b.Navigation("application");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Rolemenu", b =>
                {
                    b.HasOne("DigitalMenu.Models.EntitySystem.Menu", "menu")
                        .WithMany("rolemenu")
                        .HasForeignKey("menuIdMenu");

                    b.HasOne("DigitalMenu.Models.EntitySystem.Role", "role")
                        .WithMany("rolemenu")
                        .HasForeignKey("roleIdRole");

                    b.Navigation("menu");

                    b.Navigation("role");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Roleuser", b =>
                {
                    b.HasOne("DigitalMenu.Models.EntitySystem.Role", "role")
                        .WithMany("roleuser")
                        .HasForeignKey("roleIdRole");

                    b.HasOne("DigitalMenu.Models.EntitySystem.User", "user")
                        .WithMany("roleuser")
                        .HasForeignKey("userIdUser");

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.DisheCategory", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("DigitalMenu.Models.Entity.Restaurant", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("Restaurantemployee");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Application", b =>
                {
                    b.Navigation("menu");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Menu", b =>
                {
                    b.Navigation("rolemenu");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.Role", b =>
                {
                    b.Navigation("rolemenu");

                    b.Navigation("roleuser");
                });

            modelBuilder.Entity("DigitalMenu.Models.EntitySystem.User", b =>
                {
                    b.Navigation("roleuser");
                });
#pragma warning restore 612, 618
        }
    }
}
